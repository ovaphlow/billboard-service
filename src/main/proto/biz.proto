syntax = "proto3";

import "google/protobuf/empty.proto";

option java_multiple_files = true;
option java_package = "billboard.service";
option java_outer_classname = "BizProto";

package biz;

message BizReply {
  string data = 1;
}

service Candidate {
  rpc filter (CandidateFilterRequest) returns (BizReply) {}
  rpc get (CandidateGetRequest) returns (BizReply) {}
  rpc statistic (CandidateStatisticRequest) returns (BizReply) {}
}

message CandidateFilterRequest {
  string option = 1;
  map<string, string> data = 2;
}

message CandidateGetRequest {
  uint32 id = 1;
  string uuid = 2;
}

message CandidateStatisticRequest {
  string option = 1;
  map<string, string> data = 2;
}

service Resume2102 {
  rpc init (Resume2102InitRequest) returns (BizReply) {}
  rpc filter (Resume2102FilterRequest) returns (BizReply) {}
  rpc get (Resume2102GetRequest) returns (BizReply) {}
  rpc update (Resume2102UpdateRequest) returns (google.protobuf.Empty) {}
}

message Resume2102InitRequest {
  uint32 candidate_id = 1;
}

message Resume2102FilterRequest {
  string filter = 1;
  map<string, string> param = 2;
}

message Resume2102GetRequest {
  string option = 1;
  map<string, string> param = 2;
}

message Resume2102UpdateRequest {
  string option = 1;
  map<string, string> param = 2;
}

service Employer {
  rpc filter (EmployerFilterRequest) returns (BizReply) {}
  rpc filterUser (EmployerFilterUserRequest) returns (BizReply) {}
  rpc statistic (EmployerStatisticRequest) returns (BizReply) {}
}

message EmployerFilterRequest {
  string option = 1;
  map<string, string> data = 2;
}

message EmployerFilterUserRequest {
  string option = 1;
  map<string, string> data = 2;
}

message EmployerStatisticRequest {
  string option = 1;
  map<string, string> data = 2;
}

service Job {
  rpc update (JobUpdateRequest) returns (google.protobuf.Empty) {}
  rpc statistic (JobStatisticRequest) returns (BizReply) {}
}

message JobUpdateRequest {
  string option = 1;
  map<string, string> param = 2;
}

message JobStatisticRequest {
  string option = 1;
  map<string, string> data = 2;
}

service SendIn {
  rpc statistic (SendInStatisticRequest) returns (BizReply) {}
}

message SendInStatisticRequest {
  string option = 1;
  map<string, string> data = 2;
}

service Interview {
  rpc entList(InterviewEntListRequest) returns (BizReply) {}
  rpc commonList(InterviewCommonListRequest) returns (BizReply) {}
  rpc commonTotal(InterviewCommonTotalRequest) returns (BizReply) {}
  rpc insert(InterviewInsertRequest) returns (BizReply) {}
}

message InterviewEntListRequest {
  uint32 id = 1;
}

message InterviewCommonListRequest {
  uint32 id = 1;
}

message InterviewCommonTotalRequest {
  uint32 id = 1;
}

message InterviewInsertRequest {
  uint32 recruitment_id = 1;
  uint32 common_user_id = 2;
  string address = 3;
  string mianshishijian = 4;
  string luxian = 5;
  string remark = 6;
  string phone1 = 7;
  string phone2 = 8;
}
